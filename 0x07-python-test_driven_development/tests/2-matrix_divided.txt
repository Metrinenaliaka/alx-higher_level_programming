>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [1, 2, 3],
...     [3, 4, 5]
... ]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [1.5, 2.0, 2.5]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 27, in matrix_divided
    raise ZeroDivisionError('division by zero')
ZeroDivisionError: division by zero
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 23, in matrix_divided
    raise TypeError('Each row of the matrix must have the same size')
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(matrix, 'a')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 25, in matrix_divided
    raise TypeError('div must be a number')
TypeError: div must be a number
>>> matrix_divided(matrix, 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 16, in matrix_divided
    raise TypeError(message)
TypeError: matrix must be a matrix (list of lists) of integers/floats
